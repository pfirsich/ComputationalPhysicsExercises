#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Computational Physics - Exercise 5
\end_layout

\begin_layout Author
Joel Schumacher, 309231, joel.schumacher@rwth-aachen.de
\end_layout

\begin_layout Part*
Yee algorithm
\end_layout

\begin_layout Section*
Introduction
\end_layout

\begin_layout Standard
In this exercise the time evolution of a one-dimensional electromagnetic
 wave packet is examined, while propagating through an evacuated cavity
 (
\begin_inset Formula $\epsilon=1$
\end_inset

, 
\begin_inset Formula $\mu=1$
\end_inset

, 
\begin_inset Formula $\sigma=\sigma*=0$
\end_inset

) with dissipative boundaries (
\begin_inset Formula $\sigma=\sigma*=1$
\end_inset

, thickness: 
\begin_inset Formula $6\lambda$
\end_inset

) .
 In the middle of the cavity a glass plate is placed (
\begin_inset Formula $\epsilon=n^{2}=(1.46)^{2}$
\end_inset

).
\end_layout

\begin_layout Standard
The wavelength of the wave is set to 
\begin_inset Formula $\lambda=1$
\end_inset

 and the size of the cavity is 
\begin_inset Formula $X=100\lambda$
\end_inset

.
 The size of the glass plate is 
\begin_inset Formula $g=2\lambda$
\end_inset

.
 The wave packet is emitted at 
\begin_inset Formula $x_{S}=20\lambda$
\end_inset

 and has the functional form (with 
\begin_inset Formula $f=1$
\end_inset

):
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
J(x_{S},t)=\sin(2\pi t)\cdot\exp\left(-\left(\frac{t-30}{10}\right)^{2}\right)
\]

\end_inset

 In a variation of this simulation the thickness of the glass plate is increased
 to take up half of the system: 
\begin_inset Formula $g=50\lambda$
\end_inset

 and the maximum magnitude of the electric field incident and reflected
 is measured to approximate the reflection coefficient of glass.
\end_layout

\begin_layout Section*
Simulation model
\end_layout

\begin_layout Standard
For the simulation the Yee algorithm is utilized, starting from the Maxwell-Equa
tions in 3 dimensions:
\begin_inset Formula 
\begin{align*}
\frac{\partial\vec{H}(\vec{r},t)}{\partial t} & =\frac{1}{\mu}\left[-\vec{\nabla}\times\vec{E}(\vec{r},t)-\vec{M}(\vec{r},t)\right]\\
\frac{\partial\vec{E}(\vec{r},t)}{\partial t} & =\frac{1}{\epsilon}\left[\vec{\nabla}\times\vec{H}(\vec{r},t)-\vec{J}(\vec{r},t)\right]\\
\epsilon\vec{\nabla}\cdot\vec{E}(\vec{r},t) & =0\\
\mu\vec{\nabla}\cdot\vec{H}(\vec{r},t) & =0
\end{align*}

\end_inset

a set of equations for 1 dimensional systems can be derived (x-directed,
 z-polarized, transverse mode):
\begin_inset Formula 
\begin{align*}
\frac{\partial H_{y}(r,t)}{\partial t} & =\frac{1}{\mu}\left[\frac{\partial E_{z}(r,t)}{\partial x}-M_{y}(r,t)\right]\\
\frac{\partial E_{z}(r,t)}{\partial t} & =\frac{1}{\epsilon}\left[\frac{\partial H_{y}(r,t)}{\partial x}-J_{z}(r,t)\right]
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
In the Yee algorithm the divergence-freeness (stated by the Gauss law relations)
 is ensured by the choice of the simulation grid in that every 
\begin_inset Formula $\vec{E}$
\end_inset

 component is surrounded by 
\begin_inset Formula $4$
\end_inset

 circulating 
\begin_inset Formula $\vec{H}$
\end_inset

 components and vice versa (in the 3D case).
\end_layout

\begin_layout Standard
Therefore the Yee algorithm can solve for both fields simultaneously, by
 interleaving the simulation grids of 
\begin_inset Formula $\vec{E}$
\end_inset

 and 
\begin_inset Formula $\vec{H}$
\end_inset

.
 
\end_layout

\begin_layout Standard
In the one-dimensional case this simplifies to the simulation grid for 
\begin_inset Formula $E_{z}$
\end_inset

 and the grid for 
\begin_inset Formula $H_{y}$
\end_inset

 being displaced by 
\begin_inset Formula $\frac{\Delta}{2}$
\end_inset

, where 
\begin_inset Formula $\Delta$
\end_inset

 is the spacing of the simulation grid.
\end_layout

\begin_layout Standard
This displacement is also done in time by 
\begin_inset Formula $\frac{\tau}{2}$
\end_inset

, where 
\begin_inset Formula $\tau$
\end_inset

 is the time step of the simulation, to implement a leapfrog algorithm.
\end_layout

\begin_layout Standard
Furthermore for the numerical solution the finite difference approximation
 for the first derivative is used, so that the 1 dimensional Maxwell equations
 become:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
\frac{H_{y}|_{l+1/2}^{n+1}-H_{y}|_{l+1/2}^{n}}{\tau} & =\frac{1}{\mu_{l+1/2}}\left[\frac{E_{z}|_{l+1}^{n+1/2}-E_{z}|_{l}^{n+1/2}}{\Delta}-M_{source_{y}}|_{l+1/2}^{n+1/2}-\sigma*_{l+1/2}H_{y}|_{l+1/2}^{n+1/2}\right]\\
\frac{E_{z}|_{l}^{n+1/2}-E_{z}|_{l}^{n-1/2}}{\tau} & =\frac{1}{\epsilon_{l}}\left[\frac{H_{y}|_{l+1/2}^{n}-H_{y}|_{l-1/2}^{n}}{\Delta}-J_{source_{z}}|_{l}^{n}-\sigma_{l}E_{z}|_{l}^{n}\right]
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
while Yee's notation is used here in which the lower index denotes the spatial
 dependence of the quantity and the upper index denotes the temporal dependence.
\end_layout

\begin_layout Standard
Rearranging and setting 
\begin_inset Formula $M_{source}=0$
\end_inset

 yields the update rules:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
H_{y}|_{l+1/2}^{n+1} & =A_{l+1/2}H_{y}|_{l+1/2}^{n}+B_{l+1/2}\left[\frac{E_{z}|_{l+1}^{n+1/2}-E_{z}|_{l}^{n+1/2}}{\Delta}\right]\\
E_{z}|_{l}^{n+1/2} & =C_{l}E_{z}|_{l}^{n-1/2}+D_{l}\left[\frac{H_{y}|_{l+1/2}^{n}-H_{y}|_{l-1/2}^{n}}{\Delta}-J_{source_{z}}|_{l}^{n}\right]
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
with:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
A & =\left(\frac{1-\frac{\sigma*_{l+1/2}\tau}{2\mu_{l+1/2}}}{1+\frac{\sigma*_{l+1/2}\tau}{2\mu_{l+1/2}}}\right)\\
B & =\left(\frac{\frac{\tau}{\mu_{l+1/2}}}{1+\frac{\sigma*_{l+1/2}\tau}{2\mu_{l+1/2}}}\right)\\
C & =\left(\frac{1-\frac{\sigma_{l}\tau}{2\epsilon_{l}}}{1+\frac{\sigma_{l}\tau}{2\epsilon_{l}}}\right)\\
D & =\left(\frac{\frac{\tau}{2\epsilon_{l}}}{1+\frac{\sigma_{l}\tau}{2\epsilon_{l}}}\right)
\end{align*}

\end_inset

The parameters chosen for the simulation are 
\begin_inset Formula $\Delta=\lambda/50$
\end_inset

 and 
\begin_inset Formula $\tau=0.9\Delta$
\end_inset

.
 
\end_layout

\begin_layout Section*
Simulation results
\end_layout

\begin_layout Standard
The electric field at different times can be seen in figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:g2_t1000"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:g2_t2500"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:g2_t5000"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:g2_t6000"

\end_inset

.
 If 
\begin_inset Formula $\tau=1.05\Delta$
\end_inset

 is chosen as the time step, the simulation does not terminate and the software
 package used (numpy) throws exceptions regarding the occurence of 
\begin_inset Formula $NaN$
\end_inset

 and 
\begin_inset Formula $INF$
\end_inset

, which implies severe numerical instability.
\end_layout

\begin_layout Standard
Otherwise a partial reflection of the incoming wave at the glass plate can
 be observed and a rapid absorption of the wave in the boundaries.
\end_layout

\begin_layout Standard
Figures with the same parameters, but with a glass plate of thickness 
\begin_inset Formula $g=50\lambda$
\end_inset

 are 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:g50_t1000"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:g50_t2500"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:g50_t5000"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:g50_t6000"

\end_inset

.
 
\end_layout

\begin_layout Standard
The maximum magnitude of the electric field on the left side of the glass
 plate before and after the reflection are: 
\begin_inset Formula 
\begin{align*}
E_{max,incident} & =\max_{x<X/2}|E(t=2500)|=0.01001\\
E_{max,reflected} & =\max_{x<X/2}|E(t=5000)|=0.00188
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename t=1000,glass=2.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Electric field at time 
\begin_inset Formula $t=1000/\tau$
\end_inset

, glass plate thickness 
\begin_inset Formula $g=2\lambda$
\end_inset

.
 The title of the plot denotes the step number.
\begin_inset CommandInset label
LatexCommand label
name "fig:g2_t1000"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename t=2500,glass=2.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Electric field at time 
\begin_inset Formula $t=2500/\tau$
\end_inset

, glass plate thickness 
\begin_inset Formula $g=2\lambda$
\end_inset

.
 The title of the plot denotes the step number.
\begin_inset CommandInset label
LatexCommand label
name "fig:g2_t2500"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename t=5000,glass=2.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Electric field at time 
\begin_inset Formula $t=5000/\tau$
\end_inset

, glass plate thickness 
\begin_inset Formula $g=2\lambda$
\end_inset

.
 The title of the plot denotes the step number.
\begin_inset CommandInset label
LatexCommand label
name "fig:g2_t5000"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename t=6000,glass=2.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Electric field at time 
\begin_inset Formula $t=6000/\tau$
\end_inset

, glass plate thickness 
\begin_inset Formula $g=2\lambda$
\end_inset

.
 The title of the plot denotes the step number.
\begin_inset CommandInset label
LatexCommand label
name "fig:g2_t6000"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
############################# SPACER ###################################
\end_layout

\begin_layout Plain Layout
Thick glass plate below
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename t=1000,glass=50.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Electric field at time 
\begin_inset Formula $t=1000/\tau$
\end_inset

, glass plate thickness 
\begin_inset Formula $g=50\lambda$
\end_inset

.
 The title of the plot denotes the step number.
\begin_inset CommandInset label
LatexCommand label
name "fig:g50_t1000"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename t=2500,glass=50.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Electric field at time 
\begin_inset Formula $t=2500/\tau$
\end_inset

, glass plate thickness 
\begin_inset Formula $g=50\lambda$
\end_inset

.
 The title of the plot denotes the step number.
\begin_inset CommandInset label
LatexCommand label
name "fig:g50_t2500"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename t=5000,glass=50.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Electric field at time 
\begin_inset Formula $t=5000/\tau$
\end_inset

, glass plate thickness 
\begin_inset Formula $g=50\lambda$
\end_inset

.
 The title of the plot denotes the step number.
\begin_inset CommandInset label
LatexCommand label
name "fig:g50_t5000"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename t=6000,glass=50.pdf
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Electric field at time 
\begin_inset Formula $t=6000/\tau$
\end_inset

, glass plate thickness 
\begin_inset Formula $g=50\lambda$
\end_inset

.
 The title of the plot denotes the step number.
\begin_inset CommandInset label
LatexCommand label
name "fig:g50_t6000"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section*
Discussion
\end_layout

\begin_layout Standard
The simulation gives plausible results.
 For the thin glass plate the wave is partially reflected, as it would be
 expected for real light-glass interaction.
 The conducting boundaries show a rapid decay of the magnitude of the electric
 field, which is also exactly as expected.
 In the case of 
\begin_inset Formula $\tau=1.05\Delta$
\end_inset

 the simulation becomes unstable, because the Courant number 
\begin_inset Formula $S=\frac{c\tau}{|\Delta|}=\frac{\tau}{|\Delta|}$
\end_inset

 exceeds one, which is beyond the upper bound for the stable execution of
 the algorithm.
\end_layout

\begin_layout Standard
Examining a thicker glass plate expected phenomena such as a narrowing of
 the wave packet and a slow down of the propagation speed can be observed.
 With the maximum magnitudes of the electric fields left of the glass plate
 we can estimate the reflection coefficient of glass i.e.
 a dielectric with 
\begin_inset Formula $n=1.46$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
R=\frac{E_{max,reflected}^{2}}{E_{max,incident}^{2}}=\frac{0.00188^{2}}{0.01001^{2}}=0.03527
\]

\end_inset

The theoretical prediction of the reflection coefficient is:
\begin_inset Formula 
\[
R_{theory}=\frac{(n-1.46)^{2}}{(n+1.46)^{2}}=0.03497
\]

\end_inset


\end_layout

\begin_layout Standard
Which matches sufficiently well with the result from the simulation.
\end_layout

\begin_layout Standard
In conclusion the Yee algorithm can correctly solve Maxwell's equations,
 as shown by physical results regarding multiple aspects of electromagnetic
 waves, provided parameter sets that ensure numerical stability.
 It is relatively easy to implement and computationally inexpensive in the
 1D case, but scales in 
\begin_inset Formula $\mathcal{O}(N^{d})$
\end_inset

 in the 
\begin_inset Formula $d$
\end_inset

-dimensional case with a grid side length of 
\begin_inset Formula $N$
\end_inset

, which implies a substantial increase in computational requirements for
 3-dimensional simulations.
\end_layout

\begin_layout Part*
\begin_inset Note Note
status open

\begin_layout Plain Layout
* Introduction: describe briefly the problem you are modeling and simulating
\end_layout

\begin_layout Plain Layout
* Simulation model and method: describe briefly the model and simulation
 method in text format
\end_layout

\begin_layout Plain Layout
* Simulation results: show figures (with figure captions!) depicting the
 simulation results.
 Give a brief description of the results in text format
\end_layout

\begin_layout Plain Layout
* Discussion: Summarize your findings
\end_layout

\begin_layout Plain Layout
* Appendix: Include the listing of the program
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Appendix
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Python,numbers=left,basicstyle={\ttfamily},breaklines=true,showstringspaces=false,tabsize=4"
inline false
status open

\begin_layout Plain Layout

import math
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

import numpy as np
\end_layout

\begin_layout Plain Layout

import matplotlib.pyplot as plt
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

LAMBDA = 1
\end_layout

\begin_layout Plain Layout

NUM_GRID_POINTS_PER_LAMBDA = 50
\end_layout

\begin_layout Plain Layout

DELTA = LAMBDA / NUM_GRID_POINTS_PER_LAMBDA # spatial resolution, 0.02
\end_layout

\begin_layout Plain Layout

TAU = 0.9 * DELTA # temporal resolution
\end_layout

\begin_layout Plain Layout

#TAU = 1.05 * DELTA # temporal resolution
\end_layout

\begin_layout Plain Layout

X = 100*LAMBDA # Length of simulation box in spatial units
\end_layout

\begin_layout Plain Layout

L = math.floor(X / DELTA) # Length of simulation box in index units, 5000
\end_layout

\begin_layout Plain Layout

F = 1
\end_layout

\begin_layout Plain Layout

NUM_TIMESTEPS = 10000
\end_layout

\begin_layout Plain Layout

GLASS_THICKNESS = 2*LAMBDA
\end_layout

\begin_layout Plain Layout

#GLASS_THICKNESS = 50*LAMBDA
\end_layout

\begin_layout Plain Layout

N_GLASS = 1.46
\end_layout

\begin_layout Plain Layout

SOURCE_POS = 20*LAMBDA
\end_layout

\begin_layout Plain Layout

SOURCE_POS_I = math.floor(SOURCE_POS / DELTA) # 1000
\end_layout

\begin_layout Plain Layout

BOUNDARY_THICKNESS = 6*LAMBDA
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# turn on and off slowly to get a wave packet
\end_layout

\begin_layout Plain Layout

def source(t):
\end_layout

\begin_layout Plain Layout

    e = (t-30)/10
\end_layout

\begin_layout Plain Layout

    return math.sin(2*math.pi*F*t) * math.exp(-e*e)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def sigma(x):
\end_layout

\begin_layout Plain Layout

    if (x >= 0 and x <= BOUNDARY_THICKNESS) or (x >= X-BOUNDARY_THICKNESS
 and x <= X):
\end_layout

\begin_layout Plain Layout

        return 1
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        return 0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def eps(x):
\end_layout

\begin_layout Plain Layout

    if x >= X/2 and x < X/2 + GLASS_THICKNESS:
\end_layout

\begin_layout Plain Layout

        return N_GLASS*N_GLASS
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        return 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

def mu(x):
\end_layout

\begin_layout Plain Layout

    return 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

C = np.zeros(L+1)
\end_layout

\begin_layout Plain Layout

D = np.zeros(L+1)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for l in range(L+1):
\end_layout

\begin_layout Plain Layout

    x = l*DELTA
\end_layout

\begin_layout Plain Layout

    temp = sigma(x)*TAU / (2*eps(x))
\end_layout

\begin_layout Plain Layout

    C[l] = (1 - temp) / (1 + temp)
\end_layout

\begin_layout Plain Layout

    D[l] = TAU / eps(x) / (1 + temp)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

A = np.zeros(L)
\end_layout

\begin_layout Plain Layout

B = np.zeros(L)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for l in range(L):
\end_layout

\begin_layout Plain Layout

    x = (l + 0.5) * DELTA
\end_layout

\begin_layout Plain Layout

    temp = sigma(x)*TAU / (2*mu(x))
\end_layout

\begin_layout Plain Layout

    A[l] = (1 - temp) / (1 + temp)
\end_layout

\begin_layout Plain Layout

    B[l] = TAU / mu(x) / (1 + temp)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

E = np.zeros(L+1) # E_z
\end_layout

\begin_layout Plain Layout

H = np.zeros(L) # H_y
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

PLOT_T = [1000, 2500, 5000, 6000]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

plt.rc('text', usetex=True)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for t in range(NUM_TIMESTEPS):
\end_layout

\begin_layout Plain Layout

    E[1:L-1] = D[1:L-1] * (H[1:L-1] - H[0:L-2]) / DELTA + C[1:L-1] * E[1:L-1]
\end_layout

\begin_layout Plain Layout

    E[SOURCE_POS_I] -= D[SOURCE_POS_I] * source(t*TAU)
\end_layout

\begin_layout Plain Layout

    H[0:L-1] = B[0:L-1] * (E[1:L] - E[0:L-1]) / DELTA + A[0:L-1] * H[0:L-1]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    if t in PLOT_T:
\end_layout

\begin_layout Plain Layout

        E_max = np.max(np.abs(E[:L/2]))
\end_layout

\begin_layout Plain Layout

        print("E_max(t=" + str(t) + ") =", E_max)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

        ax = plt.gca()
\end_layout

\begin_layout Plain Layout

        plt.plot(E)
\end_layout

\begin_layout Plain Layout

        plt.title("t = " + str(t))
\end_layout

\begin_layout Plain Layout

        yRange = 0.016
\end_layout

\begin_layout Plain Layout

        plt.ylim(-yRange, yRange)
\end_layout

\begin_layout Plain Layout

        ax.fill_between([0, BOUNDARY_THICKNESS/DELTA], -yRange, yRange, facecolor
='grey', alpha=0.5)
\end_layout

\begin_layout Plain Layout

        ax.fill_between([(X-BOUNDARY_THICKNESS)/DELTA, X/DELTA], -yRange,
 yRange, facecolor='grey', alpha=0.5)
\end_layout

\begin_layout Plain Layout

        ax.fill_between([X/2/DELTA, (X/2+GLASS_THICKNESS)/DELTA], -yRange,
 yRange, facecolor='green', alpha=0.5)
\end_layout

\begin_layout Plain Layout

        plt.grid(True)
\end_layout

\begin_layout Plain Layout

        plt.xlabel("$x / 
\backslash
Delta$")
\end_layout

\begin_layout Plain Layout

        plt.ylabel("$E$")
\end_layout

\begin_layout Plain Layout

        plt.savefig("t=" + str(t) + ",glass=" + str(math.floor(GLASS_THICKNESS/LAM
BDA)) + ".pdf")
\end_layout

\begin_layout Plain Layout

        #plt.show()
\end_layout

\begin_layout Plain Layout

        plt.close()
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_body
\end_document
